import RPi.GPIO as GPIO
import time
GPIO.setmode(GPIO.BOARD)

TrigLeft = 21 
EchoLeft = 22
TrigRight = 23
EchoRight = 24
ThresholdValue = 

GPIO.setup(TrigLeft,GPIO.OUT)
GPIO.setup(TrigRight,GPIO.OUT)
GPIO.setup(EchoLeft,GPIO.IN)
GPIO.setup(EchoRight,GPIO.IN)

GPIO.output(TrigLeft, False) #wait for left sensor to settle
time.sleep(2)
GPIO.output(TrigRight, False) #wait for right sensor to settle
time.sleep(2)


GPIO.output(TrigLeft, True)  #give 10uS pulse to trigger the module 
time.sleep(0.00001)
GPIO.output(TrigLeft, False) #go back to low
GPIO.output(TrigRight, True)  #give 10uS pulse to trigger the module 
time.sleep(0.00001)
GPIO.output(TrigRight, False) #go back to low

while GPIO.input(EchoLeft)==0:
  Left_Pulse_Start = time.time()

while GPIO.input(EchoLeft)==1:
  Left_Pulse_End = time.time()

Left_Pulse_Duration = Left_Pulse_end - Left_Pulse_Start
LeftDistance = Left_Pulse_Duration * 17150

while GPIO.input(EchoRight)==0:
  Right_Pulse_Start = time.time()

while GPIO.input(EchoRight)==1:
  Right_Pulse_End = time.time()

Right_Pulse_Duration = Right_Pulse_End - Right_Pulse_Start
RightDistance = Right_Pulse_Duration * 17150

if(LeftDistance <= ThresholdValue)
{
	while(RightDistance >= ThresholdValue)
	{
	  UpdateMotor(7.5)
	  }
	if(RightDistance <= ThresholdValue) 
	{
	  delay(3000)
	  UpdateMotor(OldDC)
	} 
}

else if(RightDistance <= ThresholdValue)
{
	while(LeftDistance >= ThresholdValue)
	{
	  UpdateMotor(7.5)
	  }
	if(LeftDistance <= ThresholdValue) 
	{
	  delay(3000)
	  UpdateMotor(OldDC)
	} 
}








